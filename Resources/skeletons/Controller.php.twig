<?php
/**
 *  This file is generated by CodeRight
 */

namespace {{namespace}}\Controller;

use FOS\RestBundle\Controller\Annotations;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\HttpKernel\Exception\HttpException;
use FOS\RestBundle\Controller\FOSRestController;

/**
 * Description of {{entityClassName}}Controller
 * Controller of {{entityClassName}} Entity
 * @author likai
 */
class {{entityClassName}}Controller extends FOSRestController
{
    public function get{{entityClassName}}Action(Request $req){
        try{
            $filters = json_decode($req->get('filters'), true);
            $sorts = json_decode($req->get('sorts'), true);
            $fields = json_decode($req->get('fields'));
            $page = $req->get('page');
            $limit = $req->get('limit');
            $distinct = $req->get('distinct') === 'true' ? true : false;

            $srv = $this->getDefaultService();
            $results = $srv->search($filters, $sorts, $fields, $page, $limit, $distinct);

            return $results;
        }catch(\Exception $e){
            return $this->printError($e->getMessage());
        }
    }

    public function post{{entityClassName}}Action(Request $req){
        try{
            $data = $req->get('data');

            $srv = $this->getDefaultService();
            $results = $srv->add($data);

            return $results; 
        }catch(\Exception $e){
            return $this->printError($e->getMessage());
        }
    }

    public function delete{{entityClassName}}Action(Request $req){
        try{
            $data = $req->get('data');

            $data['userId'] = $this->getUserId();

            if(array_key_exists('id', $data)){
                $srv = $this->getDefaultService();
                $results = $srv->remove([$data]);
                return $results;
            }else{
                return $this->printError();
            }

        }catch(\Exception $e){
            return $this->printError($e->getMessage());
        }
    }

    public function put{{entityClassName}}Action(Request $req){
        try{
            $data = $req->get('data');

            $data['userId'] = $this->getUserId();

            if(array_key_exists('id', $data)){
                $srv = $this->getDefaultService();
                $results = $srv->update([$data]);
                return $results;
            }else{
                return $this->printError();
            }

        }catch(\Exception $e){
            return $this->printError($e->getMessage());
        }
    }

    /** 
     * @return {{entityClassName}}Service
     */
    private function getDefaultService()
    {
        // this is the naming convetion
        $srv = $this->get("{{bundle | lower}}_{{entityClassName | lower}}");
        return $srv;
    }


    private function printError($error=null){
        return [
            'error' => !empty($error) ? $error : 'no data'
        ];
    }
}